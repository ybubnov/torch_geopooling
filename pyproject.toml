[project]
name = "torch_geopooling"
version = "1.0.0"
license = {file = "LICENSE"}

description = "The geospatial pooling modules for neural networks for PyTorch"
authors = [
  {name = "Yakau Bubnou", email = "girokompass@gmail.com"}
]

readme = "README.md"
requires-python = ">=3.9"

# See https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Programming Language :: C++",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: CPython",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS"
]

dependencies = ["torch >= 2.2.0, < 2.3.0"]


[project.urls]
homepage = "https://github.com/ybubnov/torch_geopooling"
source = "https://github.com/ybubnov/torch_geopooling"


[project.optional-dependencies]
test = ["pytest >= 8.0.0", "numpy >= 1.4.0"]


[tool.setuptools.packages.find]
include = ["torch_geopooling*"]


[build-system]
build-backend = "setuptools_cxx.build_meta"
backend-path = [".", "setuptools_cxx"]
requires = [
  "cibuildwheel >= 2.0.0",
  "conan >= 2.0.0",
  "ninja >= 1.0.0",
  "numpy >= 1.4.0",
  "pybind11 >= 2.0.0, < 3.0.0",
  "python-dotenv >= 1.0.0",
  "setuptools ~= 69.5.1",
  "sympy >= 1.12",
  "toml >= 0.7.0; python_version < '3.11'",
  "torch >= 2.2.0+cpu, < 2.3.0+cpu; sys_platform == 'linux'",
  "torch >= 2.2.0, < 2.3.0; sys_platform == 'darwin' or sys_platform == 'win'",
  "typing-extensions >= 4.8.0",
  "wheel >= 0.43.0"
]


[tool.conan]
remotes = [
  {name = "conancenter", url = "https://center.conan.io", verify_ssl = true}
]

tool_requires = ["cmake/[>=3.20 <4]"]
generators = ["AutotoolsDeps"]
requires = ["llvm-openmp/17.0.6", "fmt/10.2.1"]

[tool.conan.settings]
"compiler.cppstd" = "gnu17"


# Configuration for Ruff linting and automatic formatting tool.
# See more in documentation for Ruff: https://docs.astral.sh/ruff/
[tool.ruff]
line-length = 100

[tool.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true


# Configuration to build wheels for different version of python, operating systems and
# architectures. See more in documentation: https://cibuildwheel.pypa.io/en/stable/options/
[tool.cibuildwheel]
build = "cp39-*"
build-verbosity = 3
skip = "*-musllinux_*"
repair-wheel-command = ""

# Try to find necessary dependencies (primarily torch) from torch index at first,
# and only then access Python's index for the remaining dependencies.
[tool.cibuildwheel.environment]
PIP_INDEX_URL = "https://download.pytorch.org/whl/cpu"
PIP_EXTRA_INDEX_URL = "https://pypi.python.org/simple"

[tool.cibuildwheel.macos]
archs = ["arm64"]

[tool.cibuildwheel.linux]
archs = ["aarch64", "x86_64"]
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
